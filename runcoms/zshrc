# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# source color script for vim colorscheme gruvbox
source $HOME/.vim/bundle/gruvbox/gruvbox_256palette_osx.sh

# Boyo
export BYOBU_PREFIX=$(brew --prefix)

# Use autoenv
source /usr/local/opt/autoenv/activate.sh

# Z completion
. `brew --prefix`/etc/profile.d/z.sh

# Colour of ls output (see "man ls")
# export LSCOLORS="exfxcxdxbxegedabagacad"

export EDITOR="mvim -f"
export LESS="-R"

##
## Set up the display
##
if [ -z "$DISPLAY" ]; then
export DISPLAY=:0.0
fi


##
## Some aliases
##
alias um='unison mac'
alias ls='ls -G'
alias app='open -a'
alias edit='vim'
alias green='ssh -X smutch@green.ssi.swin.edu.au'
alias lightgreen='ssh -X smutch@lightgreen.ssi.swin.edu.au'
# alias triton='ssh -X hipacc-20@triton-login.sdsc.edu'
# alias roe="ssh moray.roe.ac.uk -l sjm -Y"

alias pylab='ipython -pylab'

alias webserver='ssh asv1.cc.swin.edu.au'

alias skim='open -a skim'
alias pv='open -a preview'
alias combine_pdf="gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=combined.pdf $*"
alias finder='open -a finder'
alias pdf2png='convert -density 600X600 -resize 800X560 -quality 90'
alias pdf2png_batch="convert_pdf"
alias me="ssh green.ssi.swin.edu.au 'me'"
alias valgrind="valgrind --leak-check=yes"

alias sshuttle-baker="sshuttle -r baker 0/0"

alias c='clear'
alias la="ls -a"
alias l="ls"
alias ll="ls -lh"
alias lla="ls -lha"
alias l.="ls -d .* --color=auto"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

alias rehash="source ~/.zshrc"
alias du="du -hs"
alias v="vim --cmd 'set mouse=a'"
alias vdiff="vimdiff --cmd 'set mouse=a'"
alias mvimt="mvim --remote-tab"
alias s="subl"
alias sp="subl --project"
alias sublp="subl --project"
alias rsync="rsync -Pz"
alias p="paver -f $HOME/bin/pavement.py"
alias t="todo.sh"

test -r /sw/bin/init.sh && . /sw/bin/init.sh

calc() {
    awk "BEGIN{ print $* }"
}

function convert_pdf() {
    for f in $( ls *.pdf | cut -d'.' -f1); do
        pdf2png $f.pdf $f.png
    done
}

function del() {
while [ -n "$1" ]; do
    local file=`basename "$1"`
    # Chop trailing '/' if there
    file=${file%/}

    local destination=""

    if [ -e "$HOME/.Trash/$file" ]; then
        # Extract file and extension
        local ext=`expr "$file" : ".*\(\.[^\.]*\)$"`
        local base=${file%$ext}

        # Add a space between base and timestamp
        test -n "$base" && base="$base "

        destination="/$base`date +%H-%M-%S`_$RANDOM$ext"
    fi

    echo "Moving '$1' to '$HOME/.Trash$destination'"
    mv "$1" "$HOME/.Trash$destination"
    shift
done
}

function gen_movie() {
    # pass 1
    mencoder mf://"$1" -mf fps="$2":type="$3" -ovc lavc -lavcopts vcodec=mpeg4:vpass=1:vbitrate=2160000:mbd=2:keyint=132:v4mv:vqmin=3:lumi_mask=0.07:dark_mask=0.2:scplx_mask=0.1:tcplx_mask=0.1:naq -nosound -o temp.avi
    wait
    # pass 2
    mencoder -ovc lavc -lavcopts vcodec=mpeg4:vpass=2:vbitrate=2160000:mbd=2:keyint=132:vqblur=1.0:cmp=2:subcmp=2:dia=2:mv0:last_pred=3 -nosound -o movie.avi temp.avi
}

# Get the full path
function fpth() {
    if [[ -f $1 ]];then
        echo $(cd $(dirname $1) && pwd)/$(basename $1)
    else
        echo "File not found" >&2
    fi
}

function iph5(){
ipython -i -c 'from numpy import *;\
import h5py as h5;\
from pprint import pprint;\
fin=h5.File("'$1'", "r");\
print "I have loaded up the requested file as fin for your convenience.";\
print "I have also imported pprint and * from numpy..."'
}

# Grep functions
function gc() {
    grep -In --color=always "$*" *.c
}
function gpy() {
    grep -In --color=always "$*" *.py
}

function exd() {
    external=$(exd.py $1)
    cd $external
}

function ldgit() {
    latexdiff-git -c $2 $1.tex
    sed '/\\begin{comment}/,/\\end{comment}/d' $1_diff.tex > tmp.tex; mv tmp.tex $1_diff.tex
    rm $1_diff.pdf
    rubber -o natbib --pdf -d $1_diff.tex
    ls -1 | grep -e "$1_\(old\|new\|diff\)\..*" | grep -v '.pdf' | xargs rm
    open $1_diff.pdf
}

function ranger-cd {
   tempfile=/tmp/chosendir
   /usr/local/bin/ranger --choosedir=$tempfile "$@"
   if [ -f $tempfile -a "$(cat $tempfile)" != "$(pwd | tr -d "\n")" ]
   then
     cd "$(cat $tempfile)"
     rm $tempfile
   fi
}

function toggle-prompt() {
if (( !${+TOGGLEPROMPT} ))
then
    export TOGGLEPROMPT=0
fi
if (( $TOGGLEPROMPT != 1 ))
then
    export TOGGLEPROMPT=1
    PROMPT='
%{$GREEN_BOLD%}%n@%m%{$WHITE%}:%{$YELLOW%}%~%u%{$RESET_COLOR%}
%{$BLUE%}>%{$RESET_COLOR%} '
    RPROMPT=''
else
    export TOGGLEPROMPT=0
    PROMPT='
%{$GREEN_BOLD%}%n@%m%{$WHITE%}:%{$YELLOW%}%~%u$(parse_git_dirty)$(git_prompt_ahead)%{$RESET_COLOR%}
%{$BLUE%}>%{$RESET_COLOR%} '
    RPROMPT='%{$GREEN_BOLD%}$(current_branch)$(git_prompt_short_sha)$(git_prompt_status)%{$RESET_COLOR%}'
fi
}

function bg-light() {
    export SOLARIZED_THEME='light'
    source $HOME/.oh-my-zsh/themes/blinks.zsh-theme
}
function bg-dark() {
    export SOLARIZED_THEME='dark'
    source $HOME/.oh-my-zsh/themes/blinks.zsh-theme
}

